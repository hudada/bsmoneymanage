package com.example.bsproperty.bean;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.bsproperty.bean.TypeBean;

import com.example.bsproperty.bean.TypeBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig typeBeanDaoConfig;

    private final TypeBeanDao typeBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        typeBeanDaoConfig = daoConfigMap.get(TypeBeanDao.class).clone();
        typeBeanDaoConfig.initIdentityScope(type);

        typeBeanDao = new TypeBeanDao(typeBeanDaoConfig, this);

        registerDao(TypeBean.class, typeBeanDao);
    }
    
    public void clear() {
        typeBeanDaoConfig.clearIdentityScope();
    }

    public TypeBeanDao getTypeBeanDao() {
        return typeBeanDao;
    }

}
